spring:
  profiles:
    active: test

  datasource:
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 1
      idle-timeout: 30000
      connection-timeout: 20000
      validation-timeout: 5000
      pool-name: TestHabitTrackerPool
      auto-commit: true
      connection-test-query: SELECT 1

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: create-drop  # Recreate database for each test
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 10
          time_zone: UTC
        order_inserts: true
        order_updates: true
    open-in-view: false

  liquibase:
    enabled: true
    change-log: classpath:db/changelog/db.changelog-master.xml
    default-schema: public
    liquibase-schema: service
    contexts: test
    parameters:
      search-path: public,service
    test-rollback: true  # Rollback changes after test

logging:
  level:
    root: INFO
    com.mkhabibullin: DEBUG
    org.springframework: INFO
    org.springframework.test: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE
    org.testcontainers: INFO
    com.zaxxer.hikari: INFO
    liquibase: INFO

# Disable Swagger for tests
springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false

# Test-specific application settings
application:
  test:
    # Test data configuration
    data:
      users:
        default-password: test123
        batch-size: 10
    # Test timeouts
    timeouts:
      global: 5000
      db-operation: 1000
    # Test features toggles
    features:
      use-test-email: true
      mock-external-services: true
      cleanup-after-test: true
    # Test database settings
    database:
      schema: public
      clean-before: true
      clean-after: true
    # Audit settings for tests
    audit:
      enabled: true
      detailed-logging: true

# Test security settings
security:
  test:
    enabled: false
    mock-auth: true
    test-user:
      username: test-user
      password: test-password
      roles: ROLE_USER,ROLE_ADMIN

# Test environment specific settings
test:
  # TestContainers configuration (can be overridden by actual TestContainers setup)
  containers:
    postgres:
      docker-image: postgres:13
      init-script: db/init-test-db.sql
  # Mock services configuration
  mocks:
    enabled: true
    endpoints:
      base-url: http://localhost
      port: 9561
  # Test data generation
  data:
    generation:
      enabled: true
      seed: 12345
    cleanup:
      enabled: true
      strategy: AFTER_TEST  # Options: AFTER_TEST, AFTER_CLASS, AFTER_SUITE